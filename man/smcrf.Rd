% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smcrf.r
\name{smcrf}
\alias{smcrf}
\title{Approximate Bayesian Computation sequential Monte Carlo via random forests}
\usage{
smcrf(
  method = "smcrf-single-param",
  statistics_target = NULL,
  statistics_selection = NULL,
  smcrf_results = NULL,
  model,
  rprior,
  dprior,
  rperturb,
  dperturb,
  nParticles,
  final_sample = TRUE,
  model_redo_if_NA = FALSE,
  verbose = TRUE,
  parallel = FALSE,
  save_model = TRUE,
  save_rds = FALSE,
  filename_rds = "ABCSMCDRF.rds",
  ...
)
}
\arguments{
\item{method}{Random forest method to implement in each iteration (\code{"smcrf-single-param"} by default).
method = \code{"smcrf-single-param"}: implements ABC-RF for each parameter and results in their marginal posterior distributions.
method = \code{"smcrf-multi-param"}: implements ABC-DRF for all parameters and results in the joint posterior distribution.}

\item{statistics_target}{A dataframe containing statistics from data.
Column names are the statistics IDs.
\code{\link{smcrf}} only supports one row of statistics.
If there are multiple observations, we recommend applying \code{\link{smcrf}} to each row individually.}

\item{statistics_selection}{A dataframe indicating selection of statistics for fitting individual parameters (only works for method \code{"smcrf-single-param"}; \code{NULL} by default).
Each column's name matches one statistic ID, and each row's name matches one parameter ID.
The value is 1 if the statistic is used for the parameter, 0 otherwise.}

\item{smcrf_results}{An existing ABC-SMC-RF result.
If provided, smcrf will continue ABC-SMC-RF from the last iteration of the previous run.}

\item{model}{Model for the statistics.
The function must take two inputs: a dataframe \code{parameters} and logic variable \code{parallel}.
The model must output a reference table, where each row contains parameters for each simulation and corresponding statistics.
The column names of the reference table must match the parameter and statistics IDs.}

\item{rprior}{Function to generate particles from the prior distribution.
The function must take one input: \code{Nparameters}, the number of particles to generate.
The output is a dataframe where column names match parameter IDs,
and each row contains one parameter set.}

\item{dprior}{Function to compute the prior density.
The function must take two inputs: \code{parameters} and \code{parameter_id}.
The dataframe \code{parameters} contains parameter sets in each row, with column names as parameter IDs.
The \code{parameter_id} is either \code{"all"} or one of the parameter IDs.
The output is a vector of prior probabilities corresponding to rows in \code{parameters},
either for the parameter indicated by \code{parameter_id} or jointly for all parameters (if \code{parameter_id} = \code{"all"}).}

\item{rperturb}{Function to generate perturbed particles.
The function must take three inputs: \code{parameters_unperturbed}, \code{parameters_previous_sampled}, and \code{iteration}.
The dataframe \code{parameters_unperturbed} contains unperturbed parameter sets in each row.
The dataframe \code{parameters_previous_sampled} contains parameter sets sampled from the previous iteration in each row.
In both dataframes, the column names match parameter IDs.
The integer \code{iteration} indicates the index for current iteration.
The output is a dataframe where column names match parameter IDs,
and each row contains one perturbed parameter set corresponding to each row in \code{parameters_unperturbed}.
A popular choice for perturbation is the normal distribution centered at the unperturbed parameters,
with standard deviation equal to twice the empirical standard deviation of the parameters sampled from the previous iteration,
truncated to within the prior distribution.}

\item{dperturb}{Function to compute the perturbation density.
The function must take five inputs: \code{parameters}, \code{parameters_previous}, \code{parameters_previous_sampled}, \code{iteration}, and \code{parameter_id}.
The dataframe \code{parameters} contains parameter sets in each row.
The dataframe \code{parameters_previous} contains one parameter set from the previous iteration.
The dataframe \code{parameters_previous_sampled} contains parameter sets sampled from the previous iteration in each row.
In all three dataframes, the column names match parameter IDs.
The integer \code{iteration} indicates the index for current iteration.
The \code{parameter_id} is either \code{"all"} or one of the parameter IDs.
The output is a vector of perturbation probabilities from \code{parameters_previous} to rows in \code{parameters},
either for the parameter indicated by \code{parameter_id} or jointly for all parameters (if \code{parameter_id} = \code{"all"}).}

\item{nParticles}{A vector of particle counts.
Each entry indicates the number of simulations (e.g. particles) in the corresponding iteration.}

\item{final_sample}{A logic variable (\code{TRUE} by default).
If \code{final_sample} = \code{TRUE}, parameters will be sampled from the final iteration and saved in iteration \code{length(nParticles)+1}.}

\item{model_redo_if_NA}{A logic variable (\code{FALSE} by default).
If \code{model_redo_if_NA} = \code{TRUE}, the particles where \code{model} returns \code{NA} will be simulated again.}

\item{verbose}{A logic variable (\code{TRUE} by default).
If \code{verbose} = \code{TRUE}, progress messages will be printed during the fitting process.}

\item{parallel}{A logic variable (\code{FALSE} by default).
If \code{parallel} = \code{TRUE}, the ABC-RF functions will be computed in parallel.}

\item{save_model}{A logic variable (\code{FALSE} by default).
If \code{save_model} = \code{TRUE}, the random forest will be saved in \code{\link{smcrf}}'s output.}

\item{save_rds}{A logic variable (\code{FALSE} by default).
If \code{save_rds} = \code{TRUE}, the ABC-SMC-RF results will be saved in an rds file.}

\item{filename_rds}{A string (\code{"ABCSMCDRF.rds"} by default).
If \code{save_rds} = \code{TRUE}, the output from ABC-SMC-(D)RF will be saved in a file with this name.}

\item{...}{Additional arguments to be passed to \code{abcrf} or \code{drf}.}
}
\value{
An object \code{smcrf_results} containing the results of the inference.
If the posterior distributions have not converged to a satisfactory level,
the user may continue with \code{smcrf(smcrf_results = smcrf_results, ...)},
in which case ABC-SMC-(D)RF will continue iterating from the last run in \code{smcrf_results}.
}
\description{
\code{\link{smcrf}} uses random forests to find the posterior distribution(s) for one or more parameters in a model.
It implements the sequential Monte Carlo framework, where each iteration
uses either ABC-RF (functions \code{regAbcrf} and \code{predict} in R package \code{abcrf})
or ABC-DRF (functions \code{drf} and \code{predict} in R package \code{drf}) to update the posterior distribution(s).
}
