% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_smcrf.r
\name{plot_compare_qqplot}
\alias{plot_compare_qqplot}
\title{Plot and compare marginal quantile-quantile plots from ABC-SMC-(D)RF result}
\usage{
plot_compare_qqplot(
  plots = NULL,
  abc_results,
  parameters_truth,
  parameters_labels = NULL,
  lims = NULL
)
}
\arguments{
\item{plots}{An existed ABC-SMC-(D)RF quantile-quantile plots result.
If provided, \code{\link{plot_compare_qqplot}} will plot the quantile-qantile plot for inferred parameters in the new ABC-SMC-(D)RF result and compare it with provided quantile-quantile plots result.
If plots = NULL, \code{\link{plot_compare_qqplot}} will make a new quantile-quantile plot for inferred parameters in the ABC-SMC-(D)RF result and true parameters.}

\item{abc_results}{An ABC-SMC-(D)RF result.
The function will plot the quantile-quantile plot between the inferred parameters from the ABC-SMC-(D)RF result and true parameters.}

\item{parameters_truth}{A dataframe containing true values of parameters from the ground-truth distributions.}

\item{parameters_labels}{A dataframe containing labels in the plots for corresponding parameters.
If provided, parameter labels will be exhibited on the plots' axes.}

\item{lims}{A dataframe containing the maximum and minimum bounds for parameters.
If provided, x-axis and y-axis will be scaled by them.}
}
\value{
A list of \code{ggplot2} objects containing the quantile-quantile plots results.
The user can use the function to compare ABC-SMC-(D)RF quantile-quantile plots with the quantile-quantile plots
of other ABC-SMC-(D)RF result(s).
}
\description{
\code{\link{plot_compare_qqplot}} plots the marginal quantile-quantile plots for inferred parameters and parameters from ground-truth distributions.
}
\examples{
#    parameters_truth is optional here!
parameters_truth <- data.frame(
    theta = rnorm(10000, mean = 2, 1)
)
#    Dataframe containing the parameter labels
parameters_labels <- data.frame(
    parameter = c("theta"),
    label = c(deparse(expression(theta)))
)
#    Dataframe containing the x-axis bounds
xlimit <- data.frame(
    parameter = c("theta"),
    min = c(1),
    max = c(20)
)
}
